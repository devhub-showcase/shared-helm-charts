---
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: {{ .Chart.Name }}
  labels:
    type: pipeline
    {{- include "build-pipeline.labels" . | nindent 4 }}
spec:
  params:
    - name: source-repo
      type: string
      description: source repo that contains the application code
    - name: source-branch
      type: string
      description: branch to build from in the source repo
    - name: app-name
      type: string
      description: name of the application
    - name: registry
      type: string
      description: Image registry information
    - name: tenant-cicd-repo
      type: string
      description: source repo that contains CI/CD helm values
      default: {{.Values.tenantCICDRepo.url}}
    - name: tenant-cicd-repo-branch-name
      type: string
      description: source repo that contains CI/CD helm values
    - name: tenant-cicd-repo-base-branch
      type: string
      default: {{.Values.tenantCICDRepo.branch}}
      description: source repo that contains CI/CD helm values
    - name: helm-deploy-values
      type: string
      description: Helm Development values file name
    - name: image-tag
      type: string
      description: Tag for the Image

  workspaces:
    - name: source-shared-data
    - name: maven-settings
    - name: docker-config
    - name: git-config

  tasks:
    - name: git-clone-source    # fetch the app's repository
      taskRef:
        kind: ClusterTask
        name: git-clone
      params:
        - name: url
          value: $(params.source-repo)
        - name: revision
          value: $(params.source-branch)
      workspaces:
        - name: output
          workspace: source-shared-data
    - name: package             # run unit tests and compile the app's source code
      taskRef:
        kind: ClusterTask
        name: maven
      runAfter:
        - git-clone-source
      params:
        - name: GOALS  
          value:    
            - package   
      workspaces:
        - name: source
          workspace: source-shared-data
        - name: maven-settings
          workspace: maven-settings

    - name: build-and-push-image
      taskRef:
        kind: ClusterTask
        name: kaniko
      runAfter:
        - package
      params:
        - name: IMAGE
          value: $(params.registry)/$(params.app-name):$(params.image-tag)
      workspaces:
        - name: source
          workspace: source-shared-data
        - name: dockerconfig 
          workspace: docker-config

    - name: update-tag-and-push
      taskRef:
        kind: ClusterTask
        name: git-cli
      runAfter:
        - build-and-push-image
      params:
        - name: GIT_SCRIPT
          value: |
            git config --global --add safe.directory /workspace/source
            git clone {{.Values.tenantCICDRepo.url}}
            cd {{( splitList "/" .Values.tenantCICDRepo.url | last | replace ".git" "")}}
            git remote set-url origin $(params.tenant-cicd-repo)
            git checkout -b $(params.tenant-cicd-repo-branch-name)
            sed -ie 's|^  tag:.*|  tag: "$(params.image-tag)"|' $(params.helm-deploy-values)
            cat $(params.helm-deploy-values)
            git add $(params.helm-deploy-values).yaml
            git commit -m "Update image tag in $(params.helm-deploy-values)"
            git push --set-upstream origin $(params.tenant-cicd-repo-branch-name) --force
      workspaces:
        - name: basic-auth
          workspace: git-config
        - name: source
          workspace: source-shared-data
    
    - name: create-pull-request
      taskRef:
        kind: ClusterTask
        name: github-open-pr
      runAfter:
        - update-tag-and-push
      params:
        - name: GITHUB_TOKEN_SECRET_NAME
          value: pipeline-build-secret
        - name: REPO_FULL_NAME
          value: $(params.tenant-cicd-repo)
        - name: HEAD
          value: $(params.tenant-cicd-repo-branch-name)
        - name: BASE
          value: $(params.tenant-cicd-repo-base-branch)
        - name: TITLE
          value: "Update image tag and SHA hash for $(params.app-name)"
        - name: BODY
          value: "Updating the image tag and SHA hash after having built the latest changes of the $(params.app-name) application."
